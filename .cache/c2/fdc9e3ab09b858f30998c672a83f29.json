{"id":"app.js","dependencies":[{"name":"/home/arma7x/Desktop/New/kaios/greg/package.json","includedInParent":true,"mtime":1656033706613},{"name":"localforage","loc":{"line":3,"column":24,"index":39},"parent":"/home/arma7x/Desktop/New/kaios/greg/application/app.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/localforage/dist/localforage.js"},{"name":"mustache","loc":{"line":4,"column":21,"index":75},"parent":"/home/arma7x/Desktop/New/kaios/greg/application/app.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/mustache/mustache.js"},{"name":"./assets/js/helper.js","loc":{"line":10,"column":27,"index":362},"parent":"/home/arma7x/Desktop/New/kaios/greg/application/app.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/application/assets/js/helper.js"},{"name":"./assets/js/getMoonPhase.js","loc":{"line":11,"column":29,"index":416},"parent":"/home/arma7x/Desktop/New/kaios/greg/application/app.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/application/assets/js/getMoonPhase.js"},{"name":"./assets/js/eximport.js","loc":{"line":15,"column":24,"index":631},"parent":"/home/arma7x/Desktop/New/kaios/greg/application/app.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/application/assets/js/eximport.js"},{"name":"./assets/js/scan.js","loc":{"line":17,"column":26,"index":734},"parent":"/home/arma7x/Desktop/New/kaios/greg/application/app.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/application/assets/js/scan.js"},{"name":"tsdav","loc":{"line":18,"column":26,"index":783},"parent":"/home/arma7x/Desktop/New/kaios/greg/application/app.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/tsdav/dist/tsdav.esm.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.status = exports.events = void 0;\n\nvar _localforage = _interopRequireDefault(require(\"localforage\"));\n\nvar _mustache = _interopRequireDefault(require(\"mustache\"));\n\nvar _helper = require(\"./assets/js/helper.js\");\n\nvar _getMoonPhase = require(\"./assets/js/getMoonPhase.js\");\n\nvar _eximport = require(\"./assets/js/eximport.js\");\n\nvar _scan = require(\"./assets/js/scan.js\");\n\nvar _tsdav = require(\"tsdav\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nvar weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nvar today = new Date();\nvar currentMonth = today.getMonth();\nvar currentYear = today.getFullYear();\nvar currentDay = today.getDate();\nvar monthAndYear = document.getElementById(\"monthAndYear\");\nvar once = false;\nvar status = {\n  view: \"month\",\n  selected_day: \"\",\n  visible: false,\n  update_event_id: \"\"\n};\nexports.status = status;\nvar settings = {};\nvar blob = \"\";\nvar events = []; //ads || ads free\n//KaioOs ads\n\nexports.events = events;\n\nvar getManifest = function getManifest(callback) {\n  if (!navigator.mozApps) {\n    return false;\n  }\n\n  var self = navigator.mozApps.getSelf();\n\n  self.onsuccess = function () {\n    callback(self.result);\n  };\n\n  self.onerror = function () {};\n};\n\nvar self; //KaiOs store true||false\n\nfunction manifest(a) {\n  self = a.origin;\n  var t = document.getElementById(\"KaiOsAds-Wrapper\");\n\n  if (a.installOrigin == \"app://kaios-plus.kaiostech.com\") {\n    document.querySelector(\"#KaiOsAds-Wrapper iframe\").src = \"ads.html\";\n  } else {\n    console.log(\"Ads free\");\n    t.style.display = \"none\";\n  }\n}\n\ngetManifest(manifest); // ////////\n// finde closest event to selected date in list view\n// ////////\n\nvar find_closest_date = function find_closest_date(search_term) {\n  var t = 0;\n  var search = new Date(search_term).getTime();\n\n  for (var i = 0; i < events.length; i++) {\n    var item = new Date(events[i].dateStart).getTime();\n\n    if (search < item) {\n      t = events[i - 1].dateStart;\n      i = events.length;\n    } //after last event\n    //focus last event\n\n\n    if (search > new Date(events[events.length - 1].dateStart).getTime()) {\n      t = events[events.length - 1].dateStart;\n      i = events.length;\n    }\n  }\n\n  document.querySelectorAll(\"div#list-view article[data-date='\" + t + \"']\")[0].focus();\n  return t;\n}; // check if has event\n\n\nvar event_check = function event_check(date) {\n  var feedback = {\n    date: \"\",\n    event: false,\n    subscription: false,\n    multidayevent: false,\n    rrule: \"none\"\n  };\n\n  for (var _t = 0; _t < events.length; _t++) {\n    if (_typeof(events[_t]) === \"object\") {\n      feedback.event = false;\n      feedback.subscription = false;\n      feedback.multidayevent = false;\n      feedback.rrule = false; //feedback.date = date;\n\n      var a = new Date(events[_t].dateStart).getTime();\n      var b = new Date(events[_t].dateEnd).getTime();\n      var c = new Date(date).getTime(); // multi day event\n\n      if (events[_t][\"rrule_\"] == \"none\") {\n        if (a === c || b === c || a < c && b > c) {\n          feedback.event = true;\n\n          if (events[_t].isSubscription === true) {\n            feedback.subscription = true;\n          }\n\n          if (events[_t].multidayevent === true) {\n            feedback.multidayevent = true;\n          }\n\n          if (events[_t].time_end == \"00:00:00\" && events[_t].dateEnd == date) {\n            feedback.subscription = false;\n            feedback.event = false;\n          }\n\n          _t = events.length;\n        }\n      }\n    }\n  }\n\n  return feedback;\n}; // check if has event\n\n\nvar rrule_check = function rrule_check(date) {\n  var feedback = {\n    date: \"\",\n    event: false,\n    subscription: false,\n    multidayevent: false,\n    rrule: \"none\"\n  };\n\n  for (var _t2 = 0; _t2 < events.length; _t2++) {\n    if (_typeof(events[_t2]) === \"object\") {\n      feedback.event = false;\n      feedback.subscription = false;\n      feedback.multidayevent = false;\n      feedback.rrule = false;\n      feedback.date = date;\n      var a = new Date(events[_t2].dateStart).getTime();\n      var b = new Date(events[_t2].dateEnd).getTime();\n      var c = new Date(date).getTime(); //recurrences\n\n      if (typeof events[_t2][\"rrule_\"] !== \"undefined\" && events[_t2][\"rrule_\"] !== undefined) {\n        if (new Date(events[_t2].dateStart).getTime() <= new Date(date).getTime() && new Date(date).getTime() <= new Date(events[_t2].dateEnd).getTime()) {\n          if (events[_t2].rrule_ == \"MONTHLY\") {\n            if (new Date(events[_t2].dateStart).getDate() === new Date(date).getDate()) {\n              feedback.rrule = true;\n              _t2 = events.length;\n              return feedback;\n            }\n          }\n\n          if (events[_t2][\"rrule_\"] == \"DAILY\") {\n            feedback.rrule = true;\n            _t2 = events.length;\n            return feedback;\n          }\n\n          if (events[_t2].rrule_ == \"WEEKLY\") {\n            if (new Date(events[_t2].dateStart).getDay() === new Date(date).getDay()) {\n              feedback.rrule = true;\n              _t2 = events.length;\n              return feedback;\n            }\n          }\n\n          if (events[_t2].rrule_ == \"YEARLY\") {\n            var tt = new Date(events[_t2].dateStart);\n            var pp = new Date(date);\n\n            if (tt.getDate() + \"-\" + tt.getMonth() === pp.getDate() + \"-\" + pp.getMonth()) {\n              feedback.rrule = true;\n              _t2 = events.length;\n              return feedback;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return feedback;\n}; //////////////////\n//event slider\n///////////\n\n\nvar slider = [];\nvar slider_index = 0;\n\nvar event_check_day = function event_check_day(date) {\n  slider = [];\n  var k = document.querySelector(\"div#event-slider-indicator div\");\n  k.innerHTML = \"\"; //hide all\n\n  var item = document.querySelectorAll(\"div#event-slider article\");\n\n  for (var i = 0; i < item.length; i++) {\n    item[i].style.display = \"none\";\n    var a = new Date(item[i].getAttribute(\"data-date\")).getTime();\n    var b = new Date(item[i].getAttribute(\"data-date-end\")).getTime();\n    var c = new Date(date).getTime(); //hide/show alarm icon\n\n    if (item[i].getAttribute(\"data-alarm\")) {\n      if (item[i].getAttribute(\"data-alarm\") == \"none\") item[i].querySelector(\"div.icons-bar img.bell\").style.display = \"none\";\n    } //all day event\n\n\n    if (item[i].getAttribute(\"data-time-start\") == \"00:00:00\" && item[i].getAttribute(\"data-time-end\") == \"00:00:00\") {\n      item[i].querySelector(\"div.time\").innerHTML = \"All day\";\n    }\n\n    var _d = item[i].getAttribute(\"data-rrule\");\n\n    if (_d === \"none\" || _d === \"\") {\n      if (a === c || b === c || a < c && b > c) {\n        //if multiday event\n        //the end date is next day\n        //time is 00:00:00\n        if (item[i].getAttribute(\"data-time-end\") == \"00:00:00\" && item[i].getAttribute(\"data-date-end\") == date) {\n          return false;\n        }\n\n        slider.push(item[i]);\n        slider[0].style.display = \"block\";\n        k.insertAdjacentHTML(\"beforeend\", \"<div class='indicator'></div>\");\n      }\n    } else {\n      if (a === c || b === c || a < c && b > c && _d) {\n        //recurrences\n        //YEAR\n        if (_d == \"YEARLY\") {\n          var tt = new Date(item[i].getAttribute(\"data-date\"));\n          var pp = new Date(date);\n\n          if (tt.getDate() + \"-\" + tt.getMonth() === pp.getDate() + \"-\" + pp.getMonth()) {\n            slider.push(item[i]);\n            slider[0].style.display = \"block\";\n            k.insertAdjacentHTML(\"beforeend\", \"<div class='indicator'></div>\");\n          }\n        } //WEEK\n\n\n        if (_d == \"WEEKLY\") {\n          if (new Date(item[i].getAttribute(\"data-date\")).getDay() == new Date(date).getDay()) {\n            slider.push(item[i]);\n            slider[0].style.display = \"block\";\n            k.insertAdjacentHTML(\"beforeend\", \"<div class='indicator'></div>\");\n          }\n        } //MONTH\n\n\n        if (_d == \"MONTHLY\") {\n          if (new Date(item[i].getAttribute(\"data-date\")).getDate() == new Date(date).getDate()) {\n            slider.push(item[i]);\n            slider[0].style.display = \"block\";\n            k.insertAdjacentHTML(\"beforeend\", \"<div class='indicator'></div>\");\n          }\n        }\n\n        if (_d == \"DAILY\") {\n          if (a === c || b === c || a < c && b > c) {\n            slider.push(item[i]);\n            slider[0].style.display = \"block\";\n            k.insertAdjacentHTML(\"beforeend\", \"<div class='indicator'></div>\");\n          }\n        }\n      }\n    }\n  }\n\n  if (slider != \"\" && slider.length > 0) {\n    k.style.opacity = 100;\n  } else {\n    k.style.opacity = 0;\n  }\n};\n\nvar slider_navigation = function slider_navigation() {\n  var p = document.querySelectorAll(\"div#event-slider-indicator div div\");\n\n  if (slider_index == slider.length - 1) {\n    slider_index = -1;\n  }\n\n  slider_index++;\n  slider.forEach(function (item) {\n    item.style.display = \"none\";\n  });\n  slider[slider_index].style.display = \"block\";\n  p.forEach(function (item) {\n    item.classList.remove(\"active\");\n  });\n  p[slider_index].classList.add(\"active\");\n}; ////\n// JUMP TO TODAY\n////\n\n\nvar jump_to_today = function jump_to_today() {\n  var currentMonth = today.getMonth();\n  var currentYear = today.getFullYear();\n  showCalendar(currentMonth, currentYear);\n  event_check_day(status.selected_day);\n  status.selected_day = document.activeElement.getAttribute(\"data-date\");\n};\n\nfunction next() {\n  currentYear = currentMonth === 11 ? currentYear + 1 : currentYear;\n  currentMonth = (currentMonth + 1) % 12;\n  showCalendar(currentMonth, currentYear);\n  event_check_day(status.selected_day);\n}\n\nfunction previous() {\n  currentYear = currentMonth === 0 ? currentYear - 1 : currentYear;\n  currentMonth = currentMonth === 0 ? 11 : currentMonth - 1;\n  showCalendar(currentMonth, currentYear);\n  event_check_day(status.selected_day);\n} //////////////\n//BUILD CALENDAR\n//////////////\n// get weeknumber\n\n\nDate.prototype.getWeek = function () {\n  var date = new Date(this.getTime());\n  date.setHours(0, 0, 0, 0); // Thursday in current week decides the year.\n\n  date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7); // January 4 is always in week 1.\n\n  var week1 = new Date(date.getFullYear(), 0, 4); // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n\n  return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\n};\n\nvar showCalendar = function showCalendar(month, year) {\n  (0, _helper.bottom_bar)(\"add\", \"events\", \"options\");\n  var firstDay = new Date(year, month).getDay();\n  var daysInMonth = 32 - new Date(year, month, 32).getDate();\n  var tbl = document.getElementById(\"calendar-body\"); // clearing all previous cells\n\n  tbl.innerHTML = \"\"; // filing data about month and in the page via DOM.\n\n  monthAndYear.innerHTML = months[month] + \" \" + year; // creating all cells\n\n  var date = 1;\n\n  for (var i = 0; i < 6; i++) {\n    // creates a table row\n    var row = document.createElement(\"div\");\n    row.classList.add(\"flex\");\n    row.classList.add(\"row\");\n    row.classList.add(\"width-100\"); // creating individual cells, filing them up with data.\n\n    for (var j = 0; j < 7; j++) {\n      if (i === 0 && j < firstDay) {\n        var cell = document.createElement(\"div\");\n        var cellText = document.createTextNode(\"\");\n        cell.appendChild(cellText);\n        row.appendChild(cell);\n      } else if (date > daysInMonth) {\n        break;\n      } else {\n        var _cell = document.createElement(\"div\");\n\n        var span = document.createElement(\"span\");\n        var moon = document.createElement(\"div\");\n\n        var _cellText = document.createTextNode(date);\n\n        _cell.appendChild(_cellText);\n\n        _cell.appendChild(span); // set tabindex\n\n\n        _cell.setAttribute(\"tabindex\", date - 1); // store date with leading 0\n        // because input type date\n        // accept only day month with leading zero\n\n\n        var mmonth = \"0\".concat(month + 1).slice(-2);\n        var day = \"0\".concat(date).slice(-2);\n        var p = year + \"-\" + mmonth + \"-\" + day;\n        moon.classList.add(\"moon-phase-\" + (0, _getMoonPhase.getMoonPhase)(year, month, date));\n\n        _cell.appendChild(moon);\n\n        _cell.setAttribute(\"data-date\", p);\n\n        _cell.setAttribute(\"data-index\", new Date(p).toISOString()); // check if has event\n\n\n        if (events.length > 0) {\n          if (event_check(p).event == true) {\n            _cell.classList.add(\"event\");\n          }\n\n          if (rrule_check(p).rrule) {\n            _cell.classList.add(\"event\");\n          } // check if has event + subscription\n\n\n          if (event_check(p).subscription == true) {\n            _cell.classList.add(\"subscription\");\n          }\n        }\n\n        _cell.classList.add(\"item\");\n\n        row.appendChild(_cell);\n        date++;\n      }\n    } // add weeknumbers\n\n\n    var week = document.createElement(\"span\");\n    week.classList.add(\"weeknumber\");\n    var weekText = document.createTextNode(new Date(year, month, date).getWeek());\n    week.appendChild(weekText);\n    row.appendChild(week); //add row\n\n    tbl.appendChild(row);\n  }\n\n  document.querySelectorAll(\".item\")[0].focus();\n  status.selected_day = document.activeElement.getAttribute(\"data-date\"); // highlight current day\n\n  if (today.getMonth() == month && today.getFullYear() == year) {\n    document.querySelectorAll(\".item\")[currentDay - 1].focus();\n    document.querySelectorAll(\".item\")[currentDay - 1].classList.add(\"today\");\n  }\n};\n\nvar set_tabindex = function set_tabindex() {\n  document.querySelectorAll(\"div#list-view article\").forEach(function (i, p) {\n    i.setAttribute(\"tabindex\", p);\n  });\n}; //RENDER\n\n\nfunction renderHello(arr) {\n  document.getElementById(\"event-slider\").style.opacity = 0;\n  (0, _helper.sort_array)(arr, \"dateStart\", \"date\");\n  var template = document.getElementById(\"template\").innerHTML;\n\n  var rendered = _mustache.default.render(template, {\n    data: arr\n  });\n\n  document.getElementById(\"list-view\").innerHTML = rendered;\n  document.getElementById(\"event-slider\").innerHTML = rendered;\n  document.getElementById(\"event-slider\").style.opacity = 100;\n  set_tabindex(); //event_check_day(document.activeElement.getAttribute(\"data-date\"));\n  //format date\n\n  document.querySelectorAll(\"article\").forEach(function (index) {\n    var w = index.getAttribute(\"data-time-start\");\n    var s = index.getAttribute(\"data-time-end\");\n\n    if (w == \"00:00:00\" && s == \"00:00:00\") {\n      index.querySelector(\"div.time\").innerHTML = \"All day\";\n    }\n\n    var t = new Date(index.getAttribute(\"data-date\"));\n    var n = new Date(index.getAttribute(\"data-date-end\"));\n    var d = weekday[t.getDay()] + \", \" + t.getFullYear() + \" \" + months[t.getMonth()] + \" \" + t.getDate();\n    var m = weekday[n.getDay()] + \", \" + n.getFullYear() + \" \" + months[n.getMonth()] + \" \" + n.getDate(); // to do singel day event or not\n\n    if (index.classList.contains(\"multidayevent\")) {\n      index.querySelector(\"div.date\").innerText = d + \" - \" + m;\n    } else {\n      index.querySelector(\"div.date\").innerText = d;\n    }\n  });\n}\n\nvar clear_form = function clear_form() {\n  document.querySelectorAll(\"div#add-edit-event input\").forEach(function (e) {\n    e.value = \"\";\n    document.getElementById(\"form-image\").src = \"\";\n    blob = \"\";\n  });\n};\n/*\n ///////////////\n// ///////////////\n// /////////////////\n// /ROUTER\n// ///////////////\n// ///////////////\n// //////////////\n*/\n\n\nvar month = document.getElementById(\"calendar\");\nvar add_edit_event = document.getElementById(\"add-edit-event\");\nvar list_view = document.getElementById(\"list-view\");\nvar options = document.getElementById(\"options\");\n\nvar option_button_bar = function option_button_bar() {\n  setTimeout(function () {\n    if (status.view == \"options\") {\n      if (document.activeElement.getAttribute(\"data-function\") == \"subscription\") {\n        (0, _helper.bottom_bar)(\"delete\", \"select\", \"\");\n        return true;\n      } else {\n        (0, _helper.bottom_bar)(\"\", \"select\", \"\");\n        return true;\n      }\n    }\n  }, 500);\n};\n\nvar pages = document.querySelectorAll(\".page\");\n\nvar router = function router(view) {\n  pages.forEach(function (index) {\n    index.style.display = \"none\";\n  });\n\n  if (view == \"view\") {\n    if (status.view == \"month\") {\n      status.view = \"list-view\";\n    } else {\n      status.view = \"month\";\n    }\n  } // add event view\n\n\n  if (status.view == \"add-edit-event\") {\n    if (document.activeElement.hasAttribute(\"data-date\")) status.selected_day = document.activeElement.getAttribute(\"data-date\");\n    document.getElementById(\"event-date\").value = status.selected_day;\n    add_edit_event.style.display = \"block\";\n    document.querySelectorAll(\"div#add-edit-event .item\").forEach(function (i, p) {\n      i.setAttribute(\"tabindex\", p);\n    });\n    add_edit_event.querySelectorAll(\".item\")[0].focus();\n    (0, _helper.bottom_bar)(\"\", \"edit\", \"\");\n\n    if (document.getElementById(\"event-date-end\").value == \"\") {\n      document.getElementById(\"event-date-end\").value = document.getElementById(\"event-date\").value;\n    }\n\n    if (status.edit_event) {\n      document.getElementById(\"save-event\").innerText = \"update\";\n    }\n\n    console.log(status.edit_event);\n\n    if (!status.edit_event) {\n      document.getElementById(\"save-event\").innerText = \"save\";\n      document.getElementById(\"event-notification-time\").value = settings.default_notification;\n    }\n\n    return true;\n  } // month view\n\n\n  if (status.view == \"month\") {\n    if (document.activeElement.hasAttribute(\"data-date\")) status.selected_day = document.activeElement.getAttribute(\"data-date\");\n    options.style.display = \"none\";\n    month.style.display = \"block\";\n    (0, _helper.bottom_bar)(\"add\", \"events\", \"options\");\n    status.edit_event = false;\n\n    var _t3 = new Date(status.selected_day);\n\n    currentMonth = _t3.getMonth();\n    currentYear = _t3.getFullYear();\n    var k = status.selected_day;\n    showCalendar(currentMonth, currentYear);\n    document.querySelectorAll(\"div#calendar-body div.item\").forEach(function (item) {\n      if (item.getAttribute(\"data-date\") == k) {\n        item.focus();\n        event_check_day(k);\n      }\n    });\n    clear_form();\n  } // list view\n\n\n  if (status.view == \"list-view\") {\n    if (document.activeElement.hasAttribute(\"data-date\")) status.selected_day = document.activeElement.getAttribute(\"data-date\");\n    options.style.display = \"none\";\n    status.edit_event = false;\n    clear_form();\n    (0, _helper.bottom_bar)(\"edit\", \"month\", \"options\");\n    list_view.style.display = \"block\";\n    setTimeout(function () {\n      var articles = document.querySelectorAll(\"div#list-view article\");\n      var success = false;\n\n      for (var k = 0; k < articles.length; k++) {\n        if (articles[k].getAttribute(\"data-date\") == status.selected_day) {\n          articles[k].focus();\n          k = articles.length;\n          success = true;\n        }\n      }\n\n      for (var k = 0; k < articles.length; k++) {\n        console.log(articles[k].getAttribute(\"data-alarm\"));\n\n        if (articles[k].getAttribute(\"data-alarm\") == \"none\") {\n          articles[k].querySelector(\"img.bell\").style.display = \"none\";\n        }\n      }\n\n      if (!success) {\n        document.querySelectorAll(\"div#list-view article\")[0].focus();\n        find_closest_date(status.selected_day);\n      }\n\n      var rect = document.activeElement.getBoundingClientRect();\n      var elY = rect.top - document.body.getBoundingClientRect().top + rect.height / 2;\n      document.activeElement.parentNode.scrollBy({\n        left: 0,\n        top: elY - window.innerHeight / 2,\n        behavior: \"smooth\"\n      });\n    }, 1000);\n  }\n\n  if (status.view == \"options\") {\n    if (document.activeElement.hasAttribute(\"data-date\")) status.selected_day = document.activeElement.getAttribute(\"data-date\");\n\n    if (!once) {\n      (0, _eximport.list_ics)();\n      list_subscriptions();\n      once = true;\n    }\n\n    document.getElementById(\"options\").style.display = \"block\";\n    document.querySelectorAll(\"div#options .item\")[0].focus();\n    document.getElementById(\"options\").style.opacity = \"1\";\n    document.getElementById(\"subscription-form\").style.display = \"none\";\n    setTimeout(function () {\n      Array.from(document.querySelectorAll(\"div#options .item\")).forEach(function (i, p) {\n        i.setAttribute(\"tabindex\", p);\n      });\n    }, 2000);\n    option_button_bar();\n  }\n\n  if (status.view == \"subscription\") {\n    document.getElementById(\"options\").style.opacity = \"0.3\";\n    document.getElementById(\"subscription-form\").style.display = \"block\";\n    document.querySelectorAll(\"div#subscription-form div.item input\")[0].focus();\n    (0, _helper.bottom_bar)(\"QR\", \"\", \"save\");\n  }\n};\n\nvar list_subscriptions = function list_subscriptions() {\n  if (subscriptions == null) return false;\n  subscriptions.forEach(function (item) {\n    document.querySelector(\"div#options div#subscription-text\").insertAdjacentHTML(\"afterend\", '<button class=\"item dynamic\" data-function=\"subscription\">' + item.name + \"</button>\");\n    document.querySelectorAll(\"div#options button\").forEach(function (i, p) {\n      i.setAttribute(\"tabindex\", p);\n    });\n  });\n};\n\nvar lp = 0;\n\nvar load_subscriptions = function load_subscriptions() {\n  if (subscriptions == null || subscriptions.lenght == -1 || subscriptions.lenght == \"undefined\") return false;\n\n  if (lp < subscriptions.length) {\n    (0, _eximport.fetch_ics)(subscriptions[lp].url, load_subscriptions);\n    lp++;\n  } else {}\n\n  jump_to_today();\n  renderHello(events);\n  event_check_day(document.activeElement.getAttribute(\"data-date\"));\n  if (document.activeElement.hasAttribute(\"data-date\")) status.selected_day = document.activeElement.getAttribute(\"data-date\");\n};\n\nvar callback_scan = function callback_scan(url) {\n  (0, _helper.bottom_bar)(\"QR\", \"\", \"save\");\n  status.view = \"subscription\";\n  document.querySelector(\"div#subscription-form input#cal-subs-url\").value = url;\n};\n\nvar subscriptions = new Array();\n\nvar store_subscription = function store_subscription() {\n  if ((0, _helper.validate)(document.getElementById(\"cal-subs-url\").value) && document.getElementById(\"cal-subs-name\").value != \"\") {\n    subscriptions = [];\n    subscriptions.push({\n      url: document.getElementById(\"cal-subs-url\").value,\n      name: document.getElementById(\"cal-subs-name\").value\n    });\n    document.querySelector(\"input#cal-subs-name\").val = \"\";\n    document.querySelector(\"input#cal-subs-url\").val = \"\";\n\n    _localforage.default.setItem(\"subscriptions\", subscriptions).then(function (value) {\n      document.getElementById(\"subscription-form\").style.display = \"none\";\n      (0, _helper.toaster)(\"subscription stored\", 2000);\n      status.view = \"options\";\n      router();\n    }).catch(function (err) {\n      // This code runs if there were any errors\n      console.log(err);\n    });\n\n    load_subscriptions();\n    list_subscriptions();\n  } else {\n    (0, _helper.toaster)(\"Please enter a name and a valid url\", 2000);\n  }\n};\n\nvar delete_subscription = function delete_subscription() {\n  var updated_subscriptions = subscriptions.filter(function (e) {\n    return e.name != document.activeElement.innerText;\n  });\n\n  _localforage.default.setItem(\"subscriptions\", updated_subscriptions).then(function (value) {\n    //Do other things once the value has been saved.\n    console.log(\"saved: \" + value);\n    (0, _helper.toaster)(\"subscription deleted\", 2000);\n    status.view = \"month\";\n    router();\n  }).catch(function (err) {\n    // This code runs if there were any errors\n    (0, _helper.toaster)(err, 2000);\n  });\n\n  document.activeElement.remove();\n};\n\n_localforage.default.getItem(\"events\").then(function (value) {\n  if (value != null) exports.events = events = value;\n  renderHello(events);\n  jump_to_today();\n}).catch(function (err) {\n  jump_to_today();\n});\n\n_localforage.default.getItem(\"subscriptions\").then(function (value) {\n  subscriptions = value;\n  setTimeout(function () {\n    if (subscriptions == null) return false;\n    load_subscriptions();\n    console.log(subscriptions);\n  }, 2000);\n}).catch(function (err) {\n  // This code runs if there were any errors\n  console.log(err);\n});\n\n_localforage.default.getItem(\"settings\").then(function (value) {\n  if (value == null) return false;\n  settings = value;\n  document.getElementById(\"default-notification-time\").value = settings.default_notification;\n}).catch(function (err) {\n  // This code runs if there were any errors\n  console.log(err);\n});\n\nfunction handleVisibilityChange() {\n  if (document.visibilityState === \"hidden\") {\n    status.visible = false;\n  } else {\n    setTimeout(function () {\n      status.visible = true;\n    }, 1000);\n  }\n}\n\nhandleVisibilityChange(); /////////////////\n///NAVIGATION\n/////////////////\n\nvar nav = function nav(move) {\n  if (document.activeElement.nodeName == \"SELECT\" || document.activeElement.type == \"date\" || document.activeElement.type == \"time\") return false;\n  var currentIndex = document.activeElement.tabIndex;\n  var next = currentIndex + move;\n  var items = 0;\n\n  if (status.view == \"month\") {\n    var b = document.activeElement.parentNode.parentNode;\n    items = b.querySelectorAll(\".item\");\n  }\n\n  if (status.view == \"list-view\") {\n    var _b = document.activeElement.parentNode;\n    items = _b.querySelectorAll(\"div#list-view article\");\n  }\n\n  if (status.view == \"subscription\") {\n    items = document.querySelectorAll(\"div#subscription-form > div.item\");\n  }\n\n  if (status.view == \"add-edit-event\" || status.view == \"options\") {\n    var _b2 = document.activeElement.parentNode;\n    items = _b2.querySelectorAll(\".item\");\n\n    if (document.activeElement.parentNode.classList.contains(\"input-parent\")) {\n      document.activeElement.parentNode.focus();\n      return true;\n    } else {\n      document.getElementById(\"add-edit-event\").firstElementChild.focus();\n    }\n  }\n\n  var targetElement = 0;\n\n  if (next <= items.length) {\n    targetElement = items[next];\n    targetElement.focus();\n  }\n\n  if (next == items.length) {\n    targetElement = items[0];\n    targetElement.focus();\n  }\n\n  var rect = document.activeElement.getBoundingClientRect();\n  var elY = rect.top - document.body.getBoundingClientRect().top + rect.height / 2;\n  document.activeElement.parentNode.scrollBy({\n    left: 0,\n    top: elY - window.innerHeight / 2,\n    behavior: \"smooth\"\n  });\n\n  if (status.view == \"month\" || status.view == \"list-view\") {\n    if (targetElement.hasAttribute(\"data-date\")) {\n      status.selected_day = targetElement.getAttribute(\"data-date\");\n      status.selected_day_id = targetElement.getAttribute(\"data-id\");\n      event_check_day(status.selected_day);\n    }\n\n    return true;\n  }\n\n  if (document.activeElement.id == \"form-image-wrapper\" && status.view == \"add-edit-event\") {\n    (0, _helper.bottom_bar)(\"\", \"remove image\", \"\");\n    return true;\n  }\n\n  if (document.activeElement.id != \"form-image-wrapper\" && status.view == \"add-edit-event\") {\n    (0, _helper.bottom_bar)(\"\", \"edit\", \"\");\n    return true;\n  }\n}; // foram actions\n// after selection\n\n\ndocument.getElementById(\"event-notification-time\").addEventListener(\"change\", function (event) {\n  setTimeout(function () {\n    document.getElementById(\"event-notification-time\").parentElement.focus();\n  }, 500);\n}); //default when is not set\n\nsettings.default_notification = \"none\";\ndocument.getElementById(\"default-notification-time\").addEventListener(\"change\", function (event) {\n  var l = document.getElementById(\"default-notification-time\").value;\n  settings.default_notification = l;\n\n  _localforage.default.setItem(\"settings\", settings).then(function (value) {}).catch(function (err) {\n    console.log(err);\n  });\n\n  setTimeout(function () {\n    document.getElementById(\"default-notification-time\").parentElement.focus();\n  }, 500);\n});\ndocument.querySelectorAll('input[type=\"time\"]').forEach(function (item) {\n  item.addEventListener(\"change\", function (event) {\n    setTimeout(function () {\n      item.parentElement.focus();\n    }, 500);\n  });\n});\ndocument.querySelectorAll('input[type=\"date\"]').forEach(function (item) {\n  item.addEventListener(\"change\", function (event) {\n    setTimeout(function () {\n      item.parentElement.focus();\n    }, 500);\n  });\n});\n\nvar add_alarm = function add_alarm(date, message_text, id) {\n  // KaiOs  2.xx\n  if (navigator.mozAlarms) {\n    // This is arbitrary data pass to the alarm\n    var data = {\n      foo: message_text,\n      event_id: id\n    }; // The \"honorTimezone\" string is what make the alarm honoring it\n\n    var request = navigator.mozAlarms.add(date, \"honorTimezone\", data);\n\n    request.onsuccess = function () {// console.log(this.result);\n    };\n\n    request.onerror = function () {\n      console.log(\"An error occurred: \" + this.error.name);\n    };\n  }\n}; // may better to compare all alarms\n// with all events\n// to clean\n\n\nvar remove_alarm = function remove_alarm(id) {\n  // KaiOs  2.xx\n  if (navigator.mozAlarms) {\n    var request = navigator.mozAlarms.getAll();\n\n    request.onsuccess = function () {\n      this.result.forEach(function (alarm) {\n        if (alarm.data.event_id == id) {\n          var req = navigator.mozAlarms.remove(alarm.id);\n\n          req.onsuccess = function () {\n            console.log(\"removed\");\n          };\n\n          req.onerror = function () {\n            console.log(\"An error occurred: \" + this.error.name);\n          };\n        } else {\n          console.log(\"no alarm founded\");\n        }\n      });\n    };\n\n    request.onerror = function () {\n      console.log(\"An error occurred:\", this.error.name);\n    };\n  }\n};\n\nvar test_alarm = function test_alarm() {\n  if (navigator.mozAlarms) {\n    var request = navigator.mozAlarms.getAll();\n\n    request.onsuccess = function () {\n      this.result.forEach(function (alarm) {\n        console.log(\"Id:\", alarm.id);\n        console.log(\"date:\", alarm.date);\n        console.log(\"respectTimezone:\", alarm.respectTimezone);\n        console.log(\"data:\", JSON.stringify(alarm.data));\n      });\n    };\n\n    request.onerror = function () {\n      console.log(\"An error occurred:\", this.error.name);\n    };\n  }\n}; // //////////////////\n// //BUILD EVENT-LIST\n// /////////////////\n// /////////////\n// /////////////\n// STORE EVENTS//\n// /////////////\n// /////////////\n\n\nvar convert_ics_date = function convert_ics_date(t) {\n  var nn = t.replace(/-/g, \"\");\n  nn = nn.replace(/:/g, \"\");\n  nn = nn.replace(\" \", \"T\");\n  nn = nn + \"00\";\n  return nn;\n};\n\nvar export_data = [];\n\nvar store_event = function store_event() {\n  var start_time = \"00:00:00\";\n\n  if (document.getElementById(\"event-time-start\").value != \"\") {\n    start_time = document.getElementById(\"event-time-start\").value;\n  }\n\n  var end_time = \"00:00:00\";\n\n  if (document.getElementById(\"event-time-end\").value != \"\") {\n    end_time = document.getElementById(\"event-time-end\").value;\n  }\n\n  var convert_dt_start = document.getElementById(\"event-date\").value + \" \" + start_time;\n  if (document.getElementById(\"event-date-end\").value == \"\") document.getElementById(\"event-date-end\").value = document.getElementById(\"event-date\").value;\n  var convert_dt_end = document.getElementById(\"event-date-end\").value + \" \" + end_time; // notification before event\n\n  var notification_time = document.getElementById(\"event-notification-time\").value;\n  var calc_notification;\n\n  if (notification_time != \"none\") {\n    calc_notification = new Date(convert_dt_start);\n    calc_notification.setMinutes(calc_notification.getMinutes() - notification_time);\n    notification_time = convert_ics_date(calc_notification.toISOString());\n  }\n\n  var multidayevent = false;\n  var a = new Date(document.getElementById(\"event-date\").value).getTime();\n  var b = new Date(document.getElementById(\"event-date-end\").value).getTime();\n\n  if (a != b) {\n    multidayevent = true;\n  }\n\n  var rrule_convert = function rrule_convert() {\n    var p = document.getElementById(\"event-recur\").value;\n    var r;\n\n    if (p != \"\" || p != \"none\") {\n      r = \"FREQ=\" + document.getElementById(\"event-recur\").value + \";UNTIL=\" + convert_ics_date(convert_dt_end);\n    }\n\n    return r;\n  };\n\n  var event = {\n    UID: (0, _helper.uid)(),\n    SUMMARY: document.getElementById(\"event-title\").value,\n    LOCATION: document.getElementById(\"event-location\").value,\n    DESCRIPTION: document.getElementById(\"event-description\").value,\n    CLASS: \"PRIVATE\",\n    DTSTAMP: convert_ics_date(convert_dt_start),\n    DTSTART: convert_ics_date(convert_dt_start),\n    DTEND: convert_ics_date(convert_dt_end),\n    RRULE: rrule_convert(),\n    rrule_: document.getElementById(\"event-recur\").value,\n    dateStart: document.getElementById(\"event-date\").value,\n    dateEnd: document.getElementById(\"event-date-end\").value,\n    time_start: document.getElementById(\"event-time-start\").value,\n    time_end: document.getElementById(\"event-time-end\").value,\n    alarm: document.getElementById(\"event-notification-time\").value,\n    alarmTrigger: notification_time,\n    isSubscription: false,\n    multidayevent: multidayevent,\n    ATTACH: blob\n  };\n\n  if (event.alarm != \"none\") {\n    event.BEGIN = \"VALARM\";\n    event[\"TRIGGER;VALUE=DATE-TIME\"] = notification_time;\n    event.ACTION = \"AUDIO\";\n    event.END = \"VALARM\";\n    add_alarm(calc_notification, event.SUMMARY, event.UID);\n  }\n\n  events.push(event);\n  var without_subscription = events.filter(function (events) {\n    return events.isSubscription === false;\n  });\n\n  _localforage.default.setItem(\"events\", without_subscription).then(function (value) {\n    // clean form\n    clear_form();\n    renderHello(events);\n    (0, _eximport.export_ical)(\"greg.ics\", without_subscription);\n  }).catch(function (err) {\n    console.log(err);\n  });\n\n  status.view = \"month\";\n  router();\n}; // ////////////\n// UPDATE EVENT\n// /////////\n\n\nvar update_event = function update_event() {\n  events.forEach(function (index) {\n    var a = new Date(document.getElementById(\"event-date\").value).getTime();\n    var b = new Date(document.getElementById(\"event-date-end\").value).getTime();\n    var multidayevent = false;\n\n    if (a != b) {\n      multidayevent = true;\n    }\n\n    if (index.UID == status.selected_day_id) {\n      var start_time = \"00:00:00\";\n\n      if (document.getElementById(\"event-time-start\").value != \"\") {\n        start_time = document.getElementById(\"event-time-start\").value;\n      }\n\n      var end_time = \"00:00:00\";\n\n      if (document.getElementById(\"event-time-end\").value != \"\") {\n        end_time = document.getElementById(\"event-time-end\").value;\n      }\n\n      var convert_dt_start = document.getElementById(\"event-date\").value + \" \" + start_time;\n      var convert_dt_end = document.getElementById(\"event-date\").value + \" \" + end_time; // notification before event\n\n      var notification_time = document.getElementById(\"event-notification-time\").value;\n      var calc_notification = \"\";\n\n      if (notification_time != \"none\") {\n        calc_notification = new Date(convert_dt_start);\n        calc_notification.setMinutes(calc_notification.getMinutes() - notification_time);\n        notification_time = convert_ics_date(calc_notification.toISOString());\n      }\n\n      var rrule_convert = function rrule_convert() {\n        var p = document.getElementById(\"event-recur\").value;\n        var r;\n\n        if (p != \"\" || p != \"none\") {\n          r = \"FREQ=\" + document.getElementById(\"event-recur\").value + \";UNTIL=\" + convert_ics_date(convert_dt_end);\n        }\n\n        return r;\n      };\n\n      index.SUMMARY = document.getElementById(\"event-title\").value;\n      index.DESCRIPTION = document.getElementById(\"event-description\").value;\n      index.LOCATION = document.getElementById(\"event-location\").value;\n      index.DTSTART = convert_ics_date(convert_dt_start);\n      index.DTEND = convert_ics_date(convert_dt_end);\n      index.dateEnd = document.getElementById(\"event-date-end\").value;\n      index.dateStart = document.getElementById(\"event-date\").value;\n      index.time_start = document.getElementById(\"event-time-start\").value;\n      index.time_end = document.getElementById(\"event-time-end\").value;\n      index.RRULE = rrule_convert();\n      index.rrule_ = document.getElementById(\"event-recur\").value;\n      index.isSubscription = false;\n      index.multidayevent = multidayevent;\n      index.alarm = document.getElementById(\"event-notification-time\").value;\n      index.alarmTrigger = notification_time;\n      if (blob != \"\") index.ATTACH = blob;\n\n      if (index.alarm != \"none\") {\n        remove_alarm(index.UID);\n        index.BEGIN = \"VALARM\";\n        index[\"TRIGGER;VALUE=DATE-TIME:\"] = notification_time;\n        index.ACTION = \"AUDIO\";\n        index.END = \"VALARM\";\n        add_alarm(calc_notification, index.SUMMARY, index.UID);\n      }\n    }\n  });\n  var without_subscription = events.filter(function (events) {\n    return events.isSubscription === false;\n  });\n\n  _localforage.default.setItem(\"events\", without_subscription).then(function (value) {\n    // clean form\n    renderHello(events);\n    (0, _eximport.export_ical)(\"greg.ics\", value);\n    status.view = \"month\";\n    router();\n    clear_form();\n  }).catch(function (err) {});\n}; // ////////////\n// EDIT EVENT\n// /////////\n\n\nvar edit_event = function edit_event() {\n  document.getElementById(\"delete-event\").style.display = \"block\";\n  document.getElementById(\"export-event\").style.display = \"block\";\n  events.forEach(function (index) {\n    if (index.UID == status.selected_day_id) {\n      document.getElementById(\"event-title\").value = index.SUMMARY;\n      document.getElementById(\"event-date\").value = index.dateStart;\n      document.getElementById(\"event-date-end\").value = index.dateEnd;\n      document.getElementById(\"event-time-start\").value = index.time_start;\n      document.getElementById(\"event-time-end\").value = index.time_end;\n      document.getElementById(\"event-description\").value = index.DESCRIPTION;\n      document.getElementById(\"event-location\").value = index.LOCATION;\n      document.querySelector(\"#event-notification-time\").value = index.alarm;\n      document.getElementById(\"form-image\").src = index.ATTACH;\n      document.getElementById(\"event-recur\").value = index.rrule_;\n    }\n  });\n}; //////////////\n//DELETE EVENT\n///////////\n\n\nvar delete_event = function delete_event() {\n  var f = false;\n  exports.events = events = events.filter(function (person) {\n    return person.UID != status.selected_day_id;\n  });\n  remove_alarm(status.selected_day_id);\n  f = true;\n  status.edit_event = false;\n  var without_subscription = events.filter(function (events) {\n    return events.isSubscription === false;\n  });\n  clear_form();\n\n  _localforage.default.setItem(\"events\", without_subscription).then(function (value) {\n    renderHello(events);\n    (0, _eximport.export_ical)(\"greg.ics\", value);\n  }).catch(function (err) {\n    // This code runs if there were any errors\n    console.log(err);\n  });\n\n  return f;\n}; // event slider\n\n\nvar t = new Date();\nvar m = \"0\".concat(t.getMonth() + 1).slice(-2);\nvar d = \"0\".concat(t.getDate()).slice(-2);\nvar y = t.getFullYear();\nevent_check_day(y + \"-\" + m + \"-\" + d); // callback import event\n\nvar import_event = function import_event(id, date) {\n  (0, _helper.toaster)(\"done\", 2000);\n  (0, _helper.bottom_bar)(\"edit\", \"\", \"\"); //renderHello(events);\n\n  var without_subscription = events.filter(function (events) {\n    return events.isSubscription === false;\n  });\n\n  _localforage.default.setItem(\"events\", without_subscription).then(function (value) {\n    renderHello(events);\n    (0, _eximport.export_ical)(\"greg.ics\", without_subscription);\n  }).catch(function (err) {});\n};\n\nvar set_datetime_form = function set_datetime_form() {\n  var d = new Date();\n  var d_h = \"0\".concat(d.getHours()).slice(-2);\n  var d_m = \"0\".concat(d.getMinutes()).slice(-2);\n  var p = d_h + \":\" + d_m;\n  var d_h_ = \"0\".concat(d.getHours() + 1).slice(-2);\n  var d_m_ = \"0\".concat(d.getMinutes()).slice(-2);\n  if (d_h_ > 23) d_h_ = \"23\";\n  var pp = d_h_ + \":\" + d_m_;\n  document.getElementById(\"event-time-start\").value = p;\n  document.getElementById(\"event-time-end\").value = pp;\n};\n\nvar pick_image_callback = function pick_image_callback(resultBlob) {\n  var t = document.getElementById(\"form-image\");\n  t.src = URL.createObjectURL(resultBlob);\n  document.getElementById(\"form-image-wrapper\").classList.add(\"item\");\n  document.querySelectorAll(\"div#add-edit-event .item\").forEach(function (i, p) {\n    i.setAttribute(\"tabindex\", p);\n  });\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    blob = fr.result;\n  };\n\n  fr.readAsDataURL(resultBlob);\n}; // ////////////////////////////\n// //KEYPAD HANDLER////////////\n// ////////////////////////////\n\n\nvar longpress = false;\nvar longpress_timespan = 1000;\nvar timeout;\n\nfunction repeat_action(param) {\n  switch (param.key) {\n    case \"0\":\n      break;\n  }\n} // ////////////\n// //LONGPRESS\n// ///////////\n\n\nfunction longpress_action(param) {\n  switch (param.key) {\n    case \"0\":\n      break;\n\n    case \"Backspace\":\n      window.close();\n      break;\n\n    case \"ArrowLeft\":\n      if (status.view == \"list-view\") {}\n\n      break;\n  }\n} // /////////////\n// //SHORTPRESS\n// ////////////\n\n\nfunction shortpress_action(param) {\n  switch (param.key) {\n    case \"*\":\n      jump_to_today();\n      break;\n\n    case \"ArrowUp\":\n      if (status.view == \"month\") {\n        nav(-7);\n      }\n\n      if (status.view == \"add-edit-event\" || status.view == \"list-view\" || status.view == \"options\" || status.view == \"subscription\") {\n        nav(-1);\n      }\n\n      break;\n\n    case \"ArrowDown\":\n      if (status.view == \"month\") {\n        nav(+7);\n      }\n\n      if (status.view == \"add-edit-event\" || status.view == \"list-view\" || status.view == \"options\" || status.view == \"subscription\") {\n        nav(+1);\n      }\n\n      break;\n\n    case \"ArrowRight\":\n      if (status.view != \"month\") return true;\n      nav(1);\n      break;\n\n    case \"ArrowLeft\":\n      if (status.view != \"month\") return true;\n      nav(-1);\n      break;\n\n    case \"1\":\n      previous();\n      break;\n\n    case \"3\":\n      next();\n      break;\n\n    case \"2\":\n      slider_navigation();\n      break;\n\n    case \"#\":\n      document.querySelectorAll(\"div#calendar div#calendar-body div div [class^='moon-phase-']\").forEach(function (e) {\n        e.classList.toggle(\"active\");\n      });\n      break;\n\n    case \"7\":\n      break;\n\n    case \"SoftRight\":\n    case \"Alt\":\n      console.log(status.view);\n\n      if (status.view == \"month\") {\n        status.view = \"options\";\n        router();\n        return true;\n      }\n\n      if (status.view == \"subscription\") {\n        // store subscription\n        store_subscription();\n        return true;\n      }\n\n      break;\n\n    case \"SoftLeft\":\n    case \"Control\":\n      if (status.view == \"list-view\") {\n        if (document.activeElement.classList.contains(\"subscription\")) {\n          (0, _helper.toaster)(\"a subscription cannot be edited\", 2000);\n          return false;\n        }\n\n        status.selected_day_id = document.activeElement.getAttribute(\"data-id\");\n        status.edit_event = true;\n        edit_event();\n        status.view = \"add-edit-event\";\n        router();\n      }\n\n      if (status.view == \"subscription\") {\n        (0, _scan.start_scan)(callback_scan);\n        status.view = \"scan\";\n        return true;\n      }\n\n      if (status.view == \"options\") {\n        delete_subscription();\n        return true;\n      }\n\n      if (status.view == \"month\") {\n        status.view = \"add-edit-event\";\n        router(); // when new event\n        // set time\n\n        set_datetime_form();\n        return true;\n      }\n\n      break;\n\n    case \"Enter\":\n      if (!status.visible) return false;\n\n      if (document.activeElement.classList.contains(\"input-parent\")) {\n        document.activeElement.children[1].focus();\n        return true;\n      }\n\n      if (document.activeElement.id == \"export-event\") {\n        events.forEach(function (index) {\n          if (index.UID == status.selected_day_id) {\n            export_data.push(index);\n          }\n        });\n        (0, _eximport.export_ical)(export_data[0].UID + \".ics\", export_data);\n        (0, _helper.toaster)(\"event exported\", 2000);\n        return true;\n      }\n\n      if (document.activeElement.id == \"select-image\") {\n        (0, _helper.pick_image)(pick_image_callback);\n        return true;\n      }\n\n      if (document.activeElement.id == \"form-image-wrapper\") {\n        document.getElementById(\"form-image\").src = \"\";\n        blob = \"\";\n        return true;\n      }\n\n      if (document.activeElement.getAttribute(\"data-function\") == \"add-subscription\") {\n        status.view = \"subscription\";\n        router();\n        return true;\n      } // same button with different text and action\n\n\n      if (document.activeElement.id == \"save-event\") {\n        if (status.edit_event) {\n          update_event();\n        } else {\n          store_event();\n        }\n\n        return true;\n      }\n\n      if (document.activeElement.id == \"delete-event\") {\n        if (delete_event()) {\n          status.view = \"month\";\n          router();\n        }\n\n        return true;\n      }\n\n      if (status.view == \"options\") {\n        if (document.activeElement.getAttribute(\"data-function\") == \"export\") {\n          _localforage.default.getItem(\"events\").then(function (value) {\n            (0, _eximport.export_ical)(\"greg.ics\", value);\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }\n\n        if (document.activeElement.getAttribute(\"data-function\") == \"import\") {\n          (0, _eximport.loadICS)(document.activeElement.getAttribute(\"data-filename\"), import_event);\n        }\n\n        return true;\n      }\n\n      if (status.view == \"month\" || status.view == \"list-view\") router(\"view\");\n      break;\n\n    case \"Backspace\":\n      if (status.view == \"add-edit-event\" && document.activeElement.tagName != \"INPUT\") {\n        param.preventDefault;\n        status.view = \"month\";\n        router();\n      }\n\n      if (status.view == \"options\") {\n        status.view = \"month\";\n        router();\n      }\n\n      if (status.view == \"scan\") {\n        param.preventDefault;\n        status.view = \"subscription\";\n        (0, _scan.stop_scan)();\n        router();\n      }\n\n      if (status.view == \"subscription\") {\n        param.preventDefault;\n        status.view = \"options\";\n        router();\n      }\n\n      break;\n  }\n} // ///////////////////////////////\n// //shortpress / longpress logic\n// //////////////////////////////\n\n\nfunction handleKeyDown(evt) {\n  option_button_bar();\n\n  if (evt.key === \"Backspace\") {\n    if (status.view == \"options\" || status.view == \"add-edit-event\" || status.view == \"scan\") {\n      evt.preventDefault();\n    }\n  }\n\n  if (evt.key === \"EndCall\") {\n    evt.preventDefault();\n    window.close();\n  }\n\n  if (!evt.repeat) {\n    longpress = false;\n    timeout = setTimeout(function () {\n      longpress = true;\n      longpress_action(evt);\n    }, longpress_timespan);\n  }\n\n  if (evt.repeat) {\n    if (evt.key == \"Backspace\") longpress = false;\n    repeat_action(evt);\n  }\n}\n\nfunction handleKeyUp(evt) {\n  if (status.visible === false) return false;\n\n  if (evt.key == \"Backspace\" && document.activeElement.tagName == \"INPUT\") {}\n\n  clearTimeout(timeout);\n\n  if (!longpress) {\n    shortpress_action(evt);\n  }\n}\n\ndocument.addEventListener(\"keydown\", handleKeyDown);\ndocument.addEventListener(\"keyup\", handleKeyUp);\ndocument.addEventListener(\"visibilitychange\", handleVisibilityChange, false);\nwindow.addEventListener(\"load\", function () {\n  console.dir(_tsdav.DAVClient); // ready\n});"},"sourceMaps":null,"error":null,"hash":"44cf8b27c4784a91a225fd1680669a8e","cacheData":{"env":{}}}