{"id":"../node_modules/rrule/dist/esm/rruleset.js","dependencies":[{"name":"/home/arma7x/Desktop/New/kaios/greg/package.json","includedInParent":true,"mtime":1656032613002},{"name":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/package.json","includedInParent":true,"mtime":1655998719762},{"name":"./rrule","loc":{"line":14,"column":18,"index":603},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/rruleset.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/rrule.js"},{"name":"./dateutil","loc":{"line":15,"column":21,"index":635},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/rruleset.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/dateutil.js"},{"name":"./helpers","loc":{"line":16,"column":25,"index":674},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/rruleset.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/helpers.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rrule = _interopRequireDefault(require(\"./rrule\"));\n\nvar _dateutil = _interopRequireDefault(require(\"./dateutil\"));\n\nvar _helpers = require(\"./helpers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\n/**\n *\n * @param {Boolean?} noCache\n *  The same stratagy as RRule on cache, default to false\n * @constructor\n */\nvar RRuleSet =\n/** @class */\nfunction (_super) {\n  __extends(RRuleSet, _super);\n\n  function RRuleSet(noCache) {\n    if (noCache === void 0) {\n      noCache = false;\n    }\n\n    var _this = _super.call(this, {}, noCache) || this;\n\n    _this._rrule = [];\n    _this._rdate = [];\n    _this._exrule = [];\n    _this._exdate = [];\n    return _this;\n  }\n  /**\n   * Adds an RRule to the set\n   *\n   * @param {RRule}\n   */\n\n\n  RRuleSet.prototype.rrule = function (rrule) {\n    if (!(rrule instanceof _rrule.default)) {\n      throw new TypeError(String(rrule) + ' is not RRule instance');\n    }\n\n    if (!(0, _helpers.includes)(this._rrule.map(String), String(rrule))) {\n      this._rrule.push(rrule);\n    }\n  };\n  /**\n   * Adds an RDate to the set\n   *\n   * @param {Date}\n   */\n\n\n  RRuleSet.prototype.rdate = function (date) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(String(date) + ' is not Date instance');\n    }\n\n    if (!(0, _helpers.includes)(this._rdate.map(Number), Number(date))) {\n      this._rdate.push(date);\n\n      _dateutil.default.sort(this._rdate);\n    }\n  };\n  /**\n   * Adds an EXRULE to the set\n   *\n   * @param {RRule}\n   */\n\n\n  RRuleSet.prototype.exrule = function (rrule) {\n    if (!(rrule instanceof _rrule.default)) {\n      throw new TypeError(String(rrule) + ' is not RRule instance');\n    }\n\n    if (!(0, _helpers.includes)(this._exrule.map(String), String(rrule))) {\n      this._exrule.push(rrule);\n    }\n  };\n  /**\n   * Adds an EXDATE to the set\n   *\n   * @param {Date}\n   */\n\n\n  RRuleSet.prototype.exdate = function (date) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(String(date) + ' is not Date instance');\n    }\n\n    if (!(0, _helpers.includes)(this._exdate.map(Number), Number(date))) {\n      this._exdate.push(date);\n\n      _dateutil.default.sort(this._exdate);\n    }\n  };\n\n  RRuleSet.prototype.valueOf = function () {\n    var result = [];\n\n    if (this._rrule.length) {\n      this._rrule.forEach(function (rrule) {\n        result.push('RRULE:' + rrule);\n      });\n    }\n\n    if (this._rdate.length) {\n      result.push('RDATE:' + this._rdate.map(function (rdate) {\n        return _dateutil.default.timeToUntilString(rdate.valueOf());\n      }).join(','));\n    }\n\n    if (this._exrule.length) {\n      this._exrule.forEach(function (exrule) {\n        result.push('EXRULE:' + exrule);\n      });\n    }\n\n    if (this._exdate.length) {\n      result.push('EXDATE:' + this._exdate.map(function (exdate) {\n        return _dateutil.default.timeToUntilString(exdate.valueOf());\n      }).join(','));\n    }\n\n    return result;\n  };\n  /**\n   * to generate recurrence field sush as:\n   *   [\"RRULE:FREQ=YEARLY;COUNT=2;BYDAY=TU;DTSTART=19970902T010000Z\",\"RRULE:FREQ=YEARLY;COUNT=1;BYDAY=TH;DTSTART=19970902T010000Z\"]\n   */\n\n\n  RRuleSet.prototype.toString = function () {\n    return JSON.stringify(this.valueOf());\n  };\n\n  RRuleSet.prototype._iter = function (iterResult) {\n    var _exdateHash = {};\n    var _exrule = this._exrule;\n    var _accept = iterResult.accept;\n\n    function evalExdate(after, before) {\n      _exrule.forEach(function (rrule) {\n        rrule.between(after, before, true).forEach(function (date) {\n          _exdateHash[Number(date)] = true;\n        });\n      });\n    }\n\n    this._exdate.forEach(function (date) {\n      _exdateHash[Number(date)] = true;\n    });\n\n    iterResult.accept = function (date) {\n      var dt = Number(date);\n\n      if (!_exdateHash[dt]) {\n        evalExdate(new Date(dt - 1), new Date(dt + 1));\n\n        if (!_exdateHash[dt]) {\n          _exdateHash[dt] = true;\n          return _accept.call(this, date);\n        }\n      }\n\n      return true;\n    };\n\n    if (iterResult.method === 'between') {\n      evalExdate(iterResult.args.after, iterResult.args.before);\n\n      iterResult.accept = function (date) {\n        var dt = Number(date);\n\n        if (!_exdateHash[dt]) {\n          _exdateHash[dt] = true;\n          return _accept.call(this, date);\n        }\n\n        return true;\n      };\n    }\n\n    for (var i = 0; i < this._rdate.length; i++) {\n      if (!iterResult.accept(new Date(this._rdate[i].valueOf()))) break;\n    }\n\n    this._rrule.forEach(function (rrule) {\n      rrule._iter(iterResult);\n    });\n\n    var res = iterResult._result;\n\n    _dateutil.default.sort(res);\n\n    switch (iterResult.method) {\n      case 'all':\n      case 'between':\n        return res;\n\n      case 'before':\n        return res.length && res[res.length - 1] || null;\n\n      case 'after':\n        return res.length && res[0] || null;\n\n      default:\n        return null;\n    }\n  };\n  /**\n   * Create a new RRuleSet Object completely base on current instance\n   */\n\n\n  RRuleSet.prototype.clone = function () {\n    var rrs = new RRuleSet(!!this._cache);\n    var i;\n\n    for (i = 0; i < this._rrule.length; i++) {\n      rrs.rrule(this._rrule[i].clone());\n    }\n\n    for (i = 0; i < this._rdate.length; i++) {\n      rrs.rdate(new Date(this._rdate[i].valueOf()));\n    }\n\n    for (i = 0; i < this._exrule.length; i++) {\n      rrs.exrule(this._exrule[i].clone());\n    }\n\n    for (i = 0; i < this._exdate.length; i++) {\n      rrs.exdate(new Date(this._exdate[i].valueOf()));\n    }\n\n    return rrs;\n  };\n\n  return RRuleSet;\n}(_rrule.default);\n\nvar _default = RRuleSet;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"85fa7297439ce8a3acc7f63732ea4053","cacheData":{"env":{}}}