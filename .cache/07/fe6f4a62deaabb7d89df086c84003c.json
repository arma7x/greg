{"id":"../node_modules/rrule/dist/esm/nlp/totext.js","dependencies":[{"name":"/home/arma7x/Desktop/New/kaios/greg/package.json","includedInParent":true,"mtime":1656032613002},{"name":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/package.json","includedInParent":true,"mtime":1655998719762},{"name":"./i18n","loc":{"line":1,"column":20,"index":20},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/nlp/totext.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/nlp/i18n.js"},{"name":"../index","loc":{"line":2,"column":18,"index":48},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/nlp/totext.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/index.js"},{"name":"../helpers","loc":{"line":3,"column":45,"index":105},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/nlp/totext.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/helpers.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _i18n = _interopRequireDefault(require(\"./i18n\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _helpers = require(\"../helpers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// =============================================================================\n// Helper functions\n// =============================================================================\n\n/**\n * Return true if a value is in an array\n */\nvar contains = function (arr, val) {\n  return arr.indexOf(val) !== -1;\n};\n\nvar defaultGetText = function (id) {\n  return id.toString();\n};\n/**\n *\n * @param {RRule} rrule\n * Optional:\n * @param {Function} gettext function\n * @param {Object} language definition\n * @constructor\n */\n\n\nvar ToText =\n/** @class */\nfunction () {\n  function ToText(rrule, gettext, language) {\n    if (gettext === void 0) {\n      gettext = defaultGetText;\n    }\n\n    if (language === void 0) {\n      language = _i18n.default;\n    }\n\n    this.text = [];\n    this.language = language || _i18n.default;\n    this.gettext = gettext;\n    this.rrule = rrule;\n    this.options = rrule.options;\n    this.origOptions = rrule.origOptions;\n\n    if (this.origOptions.bymonthday) {\n      var bymonthday = [].concat(this.options.bymonthday);\n      var bynmonthday = [].concat(this.options.bynmonthday);\n      bymonthday.sort(function (a, b) {\n        return a - b;\n      });\n      bynmonthday.sort(function (a, b) {\n        return b - a;\n      }); // 1, 2, 3, .., -5, -4, -3, ..\n\n      this.bymonthday = bymonthday.concat(bynmonthday);\n      if (!this.bymonthday.length) this.bymonthday = null;\n    }\n\n    if ((0, _helpers.isPresent)(this.origOptions.byweekday)) {\n      var byweekday = !(0, _helpers.isArray)(this.origOptions.byweekday) ? [this.origOptions.byweekday] : this.origOptions.byweekday;\n      var days = String(byweekday);\n      this.byweekday = {\n        allWeeks: byweekday.filter(function (weekday) {\n          return !weekday.n;\n        }),\n        someWeeks: byweekday.filter(function (weekday) {\n          return Boolean(weekday.n);\n        }),\n        isWeekdays: days.indexOf('MO') !== -1 && days.indexOf('TU') !== -1 && days.indexOf('WE') !== -1 && days.indexOf('TH') !== -1 && days.indexOf('FR') !== -1 && days.indexOf('SA') === -1 && days.indexOf('SU') === -1,\n        isEveryDay: days.indexOf('MO') !== -1 && days.indexOf('TU') !== -1 && days.indexOf('WE') !== -1 && days.indexOf('TH') !== -1 && days.indexOf('FR') !== -1 && days.indexOf('SA') !== -1 && days.indexOf('SU') !== -1\n      };\n\n      var sortWeekDays = function (a, b) {\n        return a.weekday - b.weekday;\n      };\n\n      this.byweekday.allWeeks.sort(sortWeekDays);\n      this.byweekday.someWeeks.sort(sortWeekDays);\n      if (!this.byweekday.allWeeks.length) this.byweekday.allWeeks = null;\n      if (!this.byweekday.someWeeks.length) this.byweekday.someWeeks = null;\n    } else {\n      this.byweekday = null;\n    }\n  }\n  /**\n   * Test whether the rrule can be fully converted to text.\n   * @param {RRule} rrule\n   * @return {Boolean}\n   */\n\n\n  ToText.isFullyConvertible = function (rrule) {\n    var canConvert = true;\n    if (!(rrule.options.freq in ToText.IMPLEMENTED)) return false;\n    if (rrule.origOptions.until && rrule.origOptions.count) return false;\n\n    for (var key in rrule.origOptions) {\n      if (contains(['dtstart', 'wkst', 'freq'], key)) return true;\n      if (!contains(ToText.IMPLEMENTED[rrule.options.freq], key)) return false;\n    }\n\n    return canConvert;\n  };\n\n  ToText.prototype.isFullyConvertible = function () {\n    return ToText.isFullyConvertible(this.rrule);\n  };\n  /**\n   * Perform the conversion. Only some of the frequencies are supported.\n   * If some of the rrule's options aren't supported, they'll\n   * be omitted from the output an \"(~ approximate)\" will be appended.\n   * @return {*}\n   */\n\n\n  ToText.prototype.toString = function () {\n    var gettext = this.gettext;\n\n    if (!(this.options.freq in ToText.IMPLEMENTED)) {\n      return gettext('RRule error: Unable to fully convert this rrule to text');\n    }\n\n    this.text = [gettext('every')]; // @ts-ignore\n\n    this[_index.default.FREQUENCIES[this.options.freq]]();\n\n    if (this.options.until) {\n      this.add(gettext('until'));\n      var until = this.options.until;\n      this.add(this.language.monthNames[until.getUTCMonth()]).add(until.getUTCDate() + ',').add(until.getUTCFullYear().toString());\n    } else if (this.options.count) {\n      this.add(gettext('for')).add(this.options.count.toString()).add(this.plural(this.options.count) ? gettext('times') : gettext('time'));\n    }\n\n    if (!this.isFullyConvertible()) this.add(gettext('(~ approximate)'));\n    return this.text.join('');\n  };\n\n  ToText.prototype.HOURLY = function () {\n    var gettext = this.gettext;\n    if (this.options.interval !== 1) this.add(this.options.interval.toString());\n    this.add(this.plural(this.options.interval) ? gettext('hours') : gettext('hour'));\n  };\n\n  ToText.prototype.MINUTELY = function () {\n    var gettext = this.gettext;\n    if (this.options.interval !== 1) this.add(this.options.interval.toString());\n    this.add(this.plural(this.options.interval) ? gettext('minutes') : gettext('minutes'));\n  };\n\n  ToText.prototype.DAILY = function () {\n    var gettext = this.gettext;\n    if (this.options.interval !== 1) this.add(this.options.interval.toString());\n\n    if (this.byweekday && this.byweekday.isWeekdays) {\n      this.add(this.plural(this.options.interval) ? gettext('weekdays') : gettext('weekday'));\n    } else {\n      this.add(this.plural(this.options.interval) ? gettext('days') : gettext('day'));\n    }\n\n    if (this.origOptions.bymonth) {\n      this.add(gettext('in'));\n\n      this._bymonth();\n    }\n\n    if (this.bymonthday) {\n      this._bymonthday();\n    } else if (this.byweekday) {\n      this._byweekday();\n    } else if (this.origOptions.byhour) {\n      this._byhour();\n    }\n  };\n\n  ToText.prototype.WEEKLY = function () {\n    var gettext = this.gettext;\n\n    if (this.options.interval !== 1) {\n      this.add(this.options.interval.toString()).add(this.plural(this.options.interval) ? gettext('weeks') : gettext('week'));\n    }\n\n    if (this.byweekday && this.byweekday.isWeekdays) {\n      if (this.options.interval === 1) {\n        this.add(this.plural(this.options.interval) ? gettext('weekdays') : gettext('weekday'));\n      } else {\n        this.add(gettext('on')).add(gettext('weekdays'));\n      }\n    } else if (this.byweekday && this.byweekday.isEveryDay) {\n      this.add(this.plural(this.options.interval) ? gettext('days') : gettext('day'));\n    } else {\n      if (this.options.interval === 1) this.add(gettext('week'));\n\n      if (this.origOptions.bymonth) {\n        this.add(gettext('in'));\n\n        this._bymonth();\n      }\n\n      if (this.bymonthday) {\n        this._bymonthday();\n      } else if (this.byweekday) {\n        this._byweekday();\n      }\n    }\n  };\n\n  ToText.prototype.MONTHLY = function () {\n    var gettext = this.gettext;\n\n    if (this.origOptions.bymonth) {\n      if (this.options.interval !== 1) {\n        this.add(this.options.interval.toString()).add(gettext('months'));\n        if (this.plural(this.options.interval)) this.add(gettext('in'));\n      } else {// this.add(gettext('MONTH'))\n      }\n\n      this._bymonth();\n    } else {\n      if (this.options.interval !== 1) this.add(this.options.interval.toString());\n      this.add(this.plural(this.options.interval) ? gettext('months') : gettext('month'));\n    }\n\n    if (this.bymonthday) {\n      this._bymonthday();\n    } else if (this.byweekday && this.byweekday.isWeekdays) {\n      this.add(gettext('on')).add(gettext('weekdays'));\n    } else if (this.byweekday) {\n      this._byweekday();\n    }\n  };\n\n  ToText.prototype.YEARLY = function () {\n    var gettext = this.gettext;\n\n    if (this.origOptions.bymonth) {\n      if (this.options.interval !== 1) {\n        this.add(this.options.interval.toString());\n        this.add(gettext('years'));\n      } else {// this.add(gettext('YEAR'))\n      }\n\n      this._bymonth();\n    } else {\n      if (this.options.interval !== 1) this.add(this.options.interval.toString());\n      this.add(this.plural(this.options.interval) ? gettext('years') : gettext('year'));\n    }\n\n    if (this.bymonthday) {\n      this._bymonthday();\n    } else if (this.byweekday) {\n      this._byweekday();\n    }\n\n    if (this.options.byyearday) {\n      this.add(gettext('on the')).add(this.list(this.options.byyearday, this.nth, gettext('and'))).add(gettext('day'));\n    }\n\n    if (this.options.byweekno) {\n      this.add(gettext('in')).add(this.plural(this.options.byweekno.length) ? gettext('weeks') : gettext('week')).add(this.list(this.options.byweekno, undefined, gettext('and')));\n    }\n  };\n\n  ToText.prototype._bymonthday = function () {\n    var gettext = this.gettext;\n\n    if (this.byweekday && this.byweekday.allWeeks) {\n      this.add(gettext('on')).add(this.list(this.byweekday.allWeeks, this.weekdaytext, gettext('or'))).add(gettext('the')).add(this.list(this.bymonthday, this.nth, gettext('or')));\n    } else {\n      this.add(gettext('on the')).add(this.list(this.bymonthday, this.nth, gettext('and')));\n    } // this.add(gettext('DAY'))\n\n  };\n\n  ToText.prototype._byweekday = function () {\n    var gettext = this.gettext;\n\n    if (this.byweekday.allWeeks && !this.byweekday.isWeekdays) {\n      this.add(gettext('on')).add(this.list(this.byweekday.allWeeks, this.weekdaytext));\n    }\n\n    if (this.byweekday.someWeeks) {\n      if (this.byweekday.allWeeks) this.add(gettext('and'));\n      this.add(gettext('on the')).add(this.list(this.byweekday.someWeeks, this.weekdaytext, gettext('and')));\n    }\n  };\n\n  ToText.prototype._byhour = function () {\n    var gettext = this.gettext;\n    this.add(gettext('at')).add(this.list(this.origOptions.byhour, undefined, gettext('and')));\n  };\n\n  ToText.prototype._bymonth = function () {\n    this.add(this.list(this.options.bymonth, this.monthtext, this.gettext('and')));\n  };\n\n  ToText.prototype.nth = function (n) {\n    n = parseInt(n.toString(), 10);\n    var nth;\n    var npos;\n    var gettext = this.gettext;\n    if (n === -1) return gettext('last');\n    npos = Math.abs(n);\n\n    switch (npos) {\n      case 1:\n      case 21:\n      case 31:\n        nth = npos + gettext('st');\n        break;\n\n      case 2:\n      case 22:\n        nth = npos + gettext('nd');\n        break;\n\n      case 3:\n      case 23:\n        nth = npos + gettext('rd');\n        break;\n\n      default:\n        nth = npos + gettext('th');\n    }\n\n    return n < 0 ? nth + ' ' + gettext('last') : nth;\n  };\n\n  ToText.prototype.monthtext = function (m) {\n    return this.language.monthNames[m - 1];\n  };\n\n  ToText.prototype.weekdaytext = function (wday) {\n    var weekday = (0, _helpers.isNumber)(wday) ? (wday + 1) % 7 : wday.getJsWeekday();\n    return (wday.n ? this.nth(wday.n) + ' ' : '') + this.language.dayNames[weekday];\n  };\n\n  ToText.prototype.plural = function (n) {\n    return n % 100 !== 1;\n  };\n\n  ToText.prototype.add = function (s) {\n    this.text.push(' ');\n    this.text.push(s);\n    return this;\n  };\n\n  ToText.prototype.list = function (arr, callback, finalDelim, delim) {\n    if (delim === void 0) {\n      delim = ',';\n    }\n\n    if (!(0, _helpers.isArray)(arr)) {\n      arr = [arr];\n    }\n\n    var delimJoin = function (array, delimiter, finalDelimiter) {\n      var list = '';\n\n      for (var i = 0; i < array.length; i++) {\n        if (i !== 0) {\n          if (i === array.length - 1) {\n            list += ' ' + finalDelimiter + ' ';\n          } else {\n            list += delimiter + ' ';\n          }\n        }\n\n        list += array[i];\n      }\n\n      return list;\n    };\n\n    callback = callback || function (o) {\n      return o.toString();\n    };\n\n    var self = this;\n\n    var realCallback = function (arg) {\n      return callback && callback.call(self, arg);\n    };\n\n    if (finalDelim) {\n      return delimJoin(arr.map(realCallback), delim, finalDelim);\n    } else {\n      return arr.map(realCallback).join(delim + ' ');\n    }\n  };\n\n  return ToText;\n}();\n\nvar _default = ToText;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"40c3d778c0be2f92d95d8968ea3b1abb","cacheData":{"env":{}}}