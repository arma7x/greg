{"id":"../node_modules/rrule/dist/esm/parsestring.js","dependencies":[{"name":"/home/arma7x/Desktop/New/kaios/greg/package.json","includedInParent":true,"mtime":1656032613002},{"name":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/package.json","includedInParent":true,"mtime":1655998719762},{"name":"./types","loc":{"line":1,"column":26,"index":26},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/parsestring.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/types.js"},{"name":"./weekday","loc":{"line":2,"column":24,"index":61},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/parsestring.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/weekday.js"},{"name":"./dateutil","loc":{"line":3,"column":21,"index":95},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/parsestring.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/dateutil.js"},{"name":"./rrule","loc":{"line":4,"column":21,"index":130},"parent":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/parsestring.js","resolved":"/home/arma7x/Desktop/New/kaios/greg/node_modules/rrule/dist/esm/rrule.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseString = parseString;\n\nvar _types = require(\"./types\");\n\nvar _weekday = require(\"./weekday\");\n\nvar _dateutil = _interopRequireDefault(require(\"./dateutil\"));\n\nvar _rrule = require(\"./rrule\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parseString(rfcString) {\n  rfcString = rfcString.replace(/^\\s+|\\s+$/, '');\n  if (!rfcString.length) return null;\n  var options = {};\n  var dtstartWithZone = /^DTSTART;TZID=(.+?):([^;]+)$/.exec(rfcString);\n\n  if (dtstartWithZone) {\n    var _ = dtstartWithZone[0],\n        tzid = dtstartWithZone[1],\n        dtstart = dtstartWithZone[2];\n    options.tzid = tzid;\n    options.dtstart = _dateutil.default.untilStringToDate(dtstart);\n    return options;\n  }\n\n  var attrs = rfcString.split(';');\n\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i].split('=');\n    var key = attr[0];\n    var value = attr[1];\n\n    switch (key) {\n      case 'FREQ':\n        options.freq = _types.Frequency[value];\n        break;\n\n      case 'WKST':\n        options.wkst = _rrule.Days[value];\n        break;\n\n      case 'COUNT':\n      case 'INTERVAL':\n      case 'BYSETPOS':\n      case 'BYMONTH':\n      case 'BYMONTHDAY':\n      case 'BYYEARDAY':\n      case 'BYWEEKNO':\n      case 'BYHOUR':\n      case 'BYMINUTE':\n      case 'BYSECOND':\n        var num = void 0;\n\n        if (value.indexOf(',') !== -1) {\n          var values = value.split(',');\n          num = values.map(function (val) {\n            if (/^[+-]?\\d+$/.test(val.toString())) {\n              return Number(val);\n            } else {\n              return val;\n            }\n          });\n        } else if (/^[+-]?\\d+$/.test(value)) {\n          num = Number(value);\n        } else {\n          num = value;\n        }\n\n        var optionKey = key.toLowerCase(); // @ts-ignore\n\n        options[optionKey] = num;\n        break;\n\n      case 'BYDAY':\n        // => byweekday\n        var n = void 0;\n        var wday = void 0;\n        var day = void 0;\n        var days = value.split(',');\n        options.byweekday = [];\n\n        for (var j = 0; j < days.length; j++) {\n          day = days[j];\n\n          if (day.length === 2) {\n            // MO, TU, ...\n            wday = _rrule.Days[day]; // wday instanceof Weekday\n\n            options.byweekday.push(wday);\n          } else {\n            // -1MO, +3FR, 1SO, ...\n            var parts = day.match(/^([+-]?\\d)([A-Z]{2})$/);\n            n = Number(parts[1]);\n            var wdaypart = parts[2];\n            wday = _rrule.Days[wdaypart].weekday;\n            options.byweekday.push(new _weekday.Weekday(wday, n));\n          }\n        }\n\n        break;\n\n      case 'DTSTART':\n        options.dtstart = _dateutil.default.untilStringToDate(value);\n        break;\n\n      case 'UNTIL':\n        options.until = _dateutil.default.untilStringToDate(value);\n        break;\n\n      case 'BYEASTER':\n        options.byeaster = Number(value);\n        break;\n\n      default:\n        throw new Error(\"Unknown RRULE property '\" + key + \"'\");\n    }\n  }\n\n  return options;\n}"},"sourceMaps":null,"error":null,"hash":"c4a7a68df3ef5bc5bb1e2ac7234805c0","cacheData":{"env":{}}}